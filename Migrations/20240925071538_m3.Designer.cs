// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using caguamanta_y_mas.Datos;

#nullable disable

namespace caguamanta_y_mas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240925071538_m3")]
    partial class m3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("caguamanta_y_mas.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("DescripcionCategoria")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateOnly>("FechaCompra")
                        .HasColumnType("date");

                    b.Property<int>("IDEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IDProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.HasKey("IdCompra");

                    b.HasIndex("IDEmpleado");

                    b.HasIndex("IDProveedor");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.DetalleCompra", b =>
                {
                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDCompra")
                        .HasColumnType("int");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<double>("PrecioUnidad")
                        .HasColumnType("float");

                    b.HasIndex("IDCompra");

                    b.HasIndex("IDProducto");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.DetalleVenta", b =>
                {
                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<int>("IDVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<double>("PrecioUnidad")
                        .HasColumnType("float");

                    b.HasIndex("IDProducto");

                    b.HasIndex("IDVenta");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Material", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaterial"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("NombreMaterial")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdMaterial");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Platillo", b =>
                {
                    b.Property<int>("IdPlatillo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlatillo"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionPlatillo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NombrePlatillo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<double>("PrecioUnidad")
                        .HasColumnType("float");

                    b.HasKey("IdPlatillo");

                    b.HasIndex("Categoria");

                    b.ToTable("Platillos");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateOnly>("FechaVenta")
                        .HasColumnType("date");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<int>("IDEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.HasKey("IdVenta");

                    b.HasIndex("IDCliente");

                    b.HasIndex("IDEmpleado");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Compra", b =>
                {
                    b.HasOne("caguamanta_y_mas.Models.Usuario", "EmpleadoNavId")
                        .WithMany("Compras")
                        .HasForeignKey("IDEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caguamanta_y_mas.Models.Proveedor", "ProveedorNavId")
                        .WithMany("Compras")
                        .HasForeignKey("IDProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpleadoNavId");

                    b.Navigation("ProveedorNavId");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.DetalleCompra", b =>
                {
                    b.HasOne("caguamanta_y_mas.Models.Compra", "CompraNavId")
                        .WithMany()
                        .HasForeignKey("IDCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caguamanta_y_mas.Models.Material", "ProductoNavId")
                        .WithMany()
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompraNavId");

                    b.Navigation("ProductoNavId");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.DetalleVenta", b =>
                {
                    b.HasOne("caguamanta_y_mas.Models.Platillo", "ProductoNavId")
                        .WithMany()
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caguamanta_y_mas.Models.Venta", "VentaNavId")
                        .WithMany()
                        .HasForeignKey("IDVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoNavId");

                    b.Navigation("VentaNavId");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Platillo", b =>
                {
                    b.HasOne("caguamanta_y_mas.Models.Categoria", "CategoriaNavId")
                        .WithMany("Platillos")
                        .HasForeignKey("Categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaNavId");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Venta", b =>
                {
                    b.HasOne("caguamanta_y_mas.Models.Cliente", "ClienteNavId")
                        .WithMany("Venta")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("caguamanta_y_mas.Models.Usuario", "EmpleadoNavId")
                        .WithMany("Venta")
                        .HasForeignKey("IDEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteNavId");

                    b.Navigation("EmpleadoNavId");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Categoria", b =>
                {
                    b.Navigation("Platillos");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("caguamanta_y_mas.Models.Usuario", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
